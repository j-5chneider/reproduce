---
title: Einfache Möglichkeiten 
subtitle: die Reproduzierbarkeit der eigenen Analysen zu steigern
date: today
author:
  - name: Jürgen Schneider
    orcid: 0000-0002-3772-4198
    email: ju.schneider@dipf.de
    affiliation: 
      - name: <img src="www/dipf-logo.png" width="40%" />
        url: https://www.dipf.de/en/institute/staff/schneider-juergen?set_language=en
license: "CC BY SA"
logo: www/dipf-logo.png
format:
  closeread-html:
    cr-style:
      narrative-background-color-sidebar: "#044040"
      narrative-text-color-sidebar: "#F2F2F2"
      section-background-color: "#F2F2F2" 
      section-outer-margin: 250px
      # narrative-background-color-overlay: "#044040"
      # narrative-text-color-overlay: "#F2F2F2"
      poem-font-family: Nunito Sans
    embed-resources: true # will make standalone html file
theme: lux
css: www/style.css
bibliography: www/references.bib
---

```{r}
library(ggplot2)
```


:::{.cr-section}

:::{focus-on="cr-def"}
# Computative Reproduzierbarkeit
## Definition
:::

:::{#cr-def}

| **Unabhängige** Forschende, die 
| **dieselben** Daten und Analyseverfahren verwenden, 
| gelangen zu **identischen** Resultaten

\

"In principle, all reported evidence should be reproducible" [@Nosek.etal.2022, S. 721]
:::










:::{focus-on="cr-artner"}
# Computative Reproduzierbarkeit
## ist nicht selbstverständlich
:::

:::{#cr-artner}

**@Artner.etal.2021**: **232** scientific claims aus **46** Zeitschriftenartikel  

\


```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| fig-dpi: 300
#| out-width: "80%"

artner <- data.frame(what = factor(c("scientific claims",
                                     "reproducible",
                                     "reproducible (strict)",
                                     "reproducible (strict) \n& procedure of paper"),
                                   levels = c("scientific claims",
                                     "reproducible",
                                     "reproducible (strict)",
                                     "reproducible (strict) \n& procedure of paper")),
                     count = c(232, 163, 137, 119),
                     percent = c("100 %", "70 %", "59 %", "51 %"))

ggplot(artner, aes(x=what, y=count)) +
  stat_summary(fun=mean, colour="#ff4c4c", geom="line", aes(group = 1), linewidth = 3) +
  geom_point(size = 6) +
  annotate("text", x = artner$what, y = artner$count - 15, label = artner$percent, size = 6) +
  scale_y_continuous(limits = c(0,235)) +
  xlab("") +
  ylab("count: scientific claims") +
  theme_light() +
  theme(text = element_text(size = 24),
        plot.background = element_rect(fill = "transparent",
                                 color = NA_character_),
        panel.background = element_rect(fill = "transparent",
                                  color = NA_character_))
```

:::












:::{focus-on="cr-story1" scale-by="1" pan-to="0%,0%"}
# Computative Reproduzierbarkeit
## im Forschungsalltag
:::

:::{#cr-story1}

![](www/fig1_1.png){.fig-story}
:::





:::{focus-on="cr-story2"}
# Computative Reproduzierbarkeit
## Voraussetzungen
:::




:::{focus-on="cr-story2" scale-by="2" pan-to="30%,80%"}
## Kompatibel mit der Softwareversion der Kolleg*innen?
:::

:::{#cr-story2}

![](www/fig1_2.png){.fig-story}
:::


:::{focus-on="cr-story2" scale-by="2" pan-to="30%,30%"}
## Software potenziell kostenfrei installierbar?
:::


:::{focus-on="cr-story2" scale-by="2" pan-to="30%,-25%"}
## Welche Rechnungen entsprechen welchen Hypothesen im Manuskript?
## Logik des Umgangs mit Ausreißern?
:::

:::{focus-on="cr-story2" scale-by="2" pan-to="30%,-75%"}
## Version der Paket-Erweiterungen eindeutig?
:::











:::{focus-on="cr-pillars"}
# Computative Reproduzierbarkeit
## Voraussetzungen
:::

:::{#cr-pillars}

* **Kostenfreie** (idealerweise open source) Software
* "Literate Programming": Input, Output und ergänzender **Text** in einer Datei
* "Compute environment control": Paket- & Software**versionen**

[@Ziemann.etal.2023]

:::
















:::{focus-on="cr-software1"}
# Kostenfreie Software
## R, JASP, JAMOVI, Python, PSPP, ...
:::

:::{#cr-software1}

![](www/software1.png)

:::













:::{focus-on="cr-software2"}
# Niederschwelliger Übergang von SPSS
:::

:::{focus-on="cr-software2" scale-by="2" pan-to="50%, 0"}
# JAMOVI
:::

:::{focus-on="cr-software2" scale-by="2" pan-to="-50%, 0"}
# JASP
:::

:::{#cr-software2}

::::{.columns}

:::{.column width="49%"}
![](www/jamovi_regression.jpg)
:::

:::{.column width="2%"}
:::

:::{.column width="49%"}
![](www/jasp_regression.jpg)
:::
::::
:::













:::

